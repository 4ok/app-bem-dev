#!/usr/bin/env bash

########################################################
###                        Help                      ###
########################################################

HELP='
Deploy.

Usage:

    deploy [action]

Parameters:

    * action

        Deploy actions.

        - project  Deploy a project.
'

########################################################
###                     Variables                    ###
########################################################

# Project name
if [[ -z $PROJECT_NAME ]]; then
    echo 'Error: Set the "PROJECT_NAME" variable'
    exit 1
fi

# Remote host
if [[ -z $REMOTE_HOST ]]; then
    echo 'Error: Set the "REMOTE_HOST" variable'
    exit 1
fi

# Remote user
if [[ -z $REMOTE_USER ]]; then
    echo 'Error: Set the "REMOTE_USER" variable'
    exit 1
fi

# Build number
if [[ -z $BUILD_NUMBER ]]; then
    echo 'Error: Set the "BUILD_NUMBER" variable'
    exit 1
fi

# Build generation
if [[ -z $BUILD_GENERATION ]]; then
    BUILD_GENERATION='0.0'
fi

########################################################
###                      Helpers                     ###
########################################################

#
# Print a title of action
#
# @1 {string} Title
#
printTitle() {
    echo "===> $1"
}

########################################################
###                     Actions                      ###
########################################################

#
# Help
#
help() {
    echo "$HELP"
}

release() {
    local buildName='release'
    local buildArchive="$buildName.tgz"
    local remoteBuildName="$BUILD_GENERATION.$BUILD_NUMBER"
    local remoteWwwDir='/var/www'
    local remoteBuildDir="$remoteWwwDir/releases/$PROJECT_NAME"
    local remoteProjectsDir="$remoteWwwDir/projects"
    local remoteProjectDir="$remoteProjectsDir/$PROJECT_NAME"
    local remoteProjectNginxDir="$remoteProjectDir/configs/nginx"
    local remoteProjectNginxIncludesDir="$remoteProjectNginxDir/includes"

    local nginxDir='/etc/nginx'
    local nginxSitesAvailableDir="$nginxDir/sites-available"
    local nginxSitesIncludeDir="$nginxDir/sites-include/$PROJECT_NAME"

    printTitle 'Uploading build archive'

    scp "$buildArchive" "$REMOTE_USER@$REMOTE_HOST:$remoteBuildDir"

    printTitle 'Deploying release'

    ssh "$REMOTE_USER@$REMOTE_HOST" << REMOTE

        if [[ -n $remoteProjectsDir ]]; then
            mkdir -p "$remoteProjectsDir"
        fi

        echo '===> Extracting a build archive'

        cd "$remoteBuildDir"
        tar -xzf "$buildArchive" --transform s/"$buildName/$remoteBuildName/" >/dev/null 2>&1
        rm -f "$buildArchive"

        echo '===> Creating a build symlink to the project'

        ln -sfn "$remoteBuildDir/$remoteBuildName" "$remoteProjectDir"

        echo '===> Deploy a nginx config'

        rm "$nginxSitesAvailableDir/nginx.conf"
        cp "$remoteProjectNginxDir/nginx.conf" "$nginxSitesAvailableDir"

        if [[ -n $remoteProjectNginxIncludesDir ]]; then
            rm -rf "$nginxSitesIncludeDir"
            mkdir "$nginxSitesIncludeDir"
            cp -f "$remoteProjectNginxIncludesDir/*" "$nginxSitesIncludeDir"
        fi

        ln -sfn \
            "$nginxSitesAvailableDir" \
            "$nginxDir"/sites-enabled/"$PROJECT_NAME"
REMOTE
}

########################################################
###                    Call action                   ###
########################################################

case "$1" in
    release)
        "$1"
    ;;
    *)
        help
    ;;
esac
