#!/usr/bin/env bash

########################################################
###                        Help                      ###
########################################################

HELP='
Module.

Usage:

    module [module_type] action [dir]
    module action

Parameters:

    * module_type

        Modules type.

        - npm     npm modules.
        - bower   bower modules.

    * action

        Modules action.

        - install          Install modules.
        - uninstall        Uninstall modules.
        - prune            Prune modules.

    * dir

        Directory for action.
'

########################################################
###                     Variables                    ###
########################################################

# Node environment
if [[ -z $NODE_ENV ]]; then
    NODE_ENV='development'
fi

# Node directories
NODE_BIN_DIR=(
    '/usr/bin'
    '/usr/local/bin'
)

# Npm
NPM=$(find "${NODE_BIN_DIR[@]}" -name 'npm' \( -type f -o -type l \))

# Node modules directory
NODE_MODULES_DIR='node_modules'

# Bower bin
BOWER="$NODE_MODULES_DIR/.bin/bower"

BOWER_COMMON_ARGS=(
    '--allow-root'
)

########################################################
###                      Helpers                     ###
########################################################

#
# Print a title of action
#
# @1 {string} Title
#
printTitle() {
    echo "===> $1"
}

########################################################
###                     Actions                      ###
########################################################

#
# Help
#
help() {
    echo "$HELP"
}

##### Common #####

#
# Install npm, bower modules
#
install() {
    npm_install
    bower_install
}

#
# Uninstall npm, bower modules
#
uninstall() {
    npm_uninstall
    bower_uninstall
}

#
# Prune npm, bower modules
#
prune() {
    npm_prune
    bower_prune
}

##### Npm #####

#
# Install npm modules
#
npm_install() {

    if [[ -n package.json ]]; then
        printTitle "Installing npm modules (Env: $NODE_ENV)"

        "$NPM" cache clean
        "$NPM" install "--$NODE_ENV"
    fi
}

#
# Remove npm modules
#
npm_uninstall() {
    printTitle 'Removing npm modules'

    rm -rf "$NODE_MODULES_DIR"
}

#
# Prune npm modules
#
npm_prune() {
    printTitle 'Pruning npm modules'

    "$NPM" prune
}

##### Bower #####

# Install bower modules
bower_install() {

    if [[ -n bower.json ]]; then
        printTitle 'Installing bower modules'

        "$BOWER" cache clean "${BOWER_COMMON_ARGS[@]}"
        "$BOWER" install --force-latest "${BOWER_COMMON_ARGS[@]}"
    fi
}

#
# Delete bower modules
#
bower_uninstall() {
    printTitle 'Removing bower modules'

    rm -rf 'bower_modules'
}

#
# Prune bower modules
#
bower_prune() {
    printTitle 'Pruning bower modules'

    "$BOWER" prune "${BOWER_COMMON_ARGS[@]}"
}

########################################################
###                    Call action                   ###
########################################################

case "$1" in
    install|uninstall|prune)
        funcName="$1"
        dir="$2"

        if [[ -n $dir ]]; then
            cd "$dir" && "$funcName"
        else
            "$funcName"
        fi
    ;;
    npm|bower)

        if [[ $2 =~ ^(install|uninstall|prune)$ ]]; then
            funcName="$1_$2"
            dir="$3"

            if [[ -n $dir ]]; then
                cd "$dir" && "$funcName"
            else
                "$funcName"
            fi
        else
            help
        fi
    ;;
    *)
        help
    ;;
esac
